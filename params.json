{"name":"Groupdate.sql","tagline":"The simplest way to group temporal data","body":"The simplest way to group by:\r\n\r\n- day\r\n- week\r\n- month\r\n- day of the week\r\n- hour of the day\r\n- and more (complete list at bottom)\r\n\r\n:tada: Time zones supported!! **the best part**\r\n\r\n:earth_americas: Use it with any programming language **the other best part**\r\n\r\nSupports PostgreSQL and MySQL\r\n\r\n## Usage\r\n\r\nGroupdate.sql creates SQL functions, which are stored by the database.\r\n\r\nYou can use these functions with any ORM (or without one).\r\n\r\n##### SQL\r\n\r\nGroup by day\r\n\r\n```sql\r\nSELECT gd_day(created_at, 'America/Los_Angeles') AS day, COUNT(*)\r\n    FROM users\r\n    GROUP BY day;\r\n-- result\r\n          day           | count\r\n------------------------+-------\r\n 2013-04-11 07:00:00+00 |   145\r\n 2013-04-12 07:00:00+00 |    65\r\n 2013-04-13 07:00:00+00 |   293\r\n```\r\n\r\nGroup by week\r\n\r\n```sql\r\nSELECT gd_week(created_at, 'America/Chicago') AS week, COUNT(*)\r\n    FROM users\r\n    GROUP BY week;\r\n-- result\r\n          week          | count\r\n------------------------+-------\r\n 2013-05-05 05:00:00+00 |  1327\r\n 2013-05-12 05:00:00+00 |  3432\r\n 2013-05-19 05:00:00+00 |   673\r\n```\r\n\r\nGroup by day of week\r\n\r\n```sql\r\nSELECT gd_day_of_week(created_at, 'America/New_York') AS day_of_week, COUNT(*)\r\n    FROM orders\r\n    GROUP BY day_of_week;\r\n-- result\r\n day_of_week | count\r\n-------------+-------\r\n           0 |   167\r\n           1 |   273\r\n           2 |   439\r\n           3 |   285\r\n           4 |   318\r\n           5 |   123\r\n           6 |   189\r\n```\r\n\r\n**Note:** Weeks start on Sunday.\r\n\r\n#### Language / Frameworks\r\n\r\nRuby on Rails\r\n\r\n```ruby\r\nUser.group(\"gd_day(created_at)\").count\r\n```\r\n\r\nDjango\r\n\r\n```python\r\n# TODO\r\n```\r\n\r\n## Installation\r\n\r\n#### For PostgreSQL\r\n\r\n```sh\r\ncurl https://raw.github.com/ankane/groupdate.sql/master/postgresql.sql | psql db_name\r\n```\r\n\r\n#### For MySQL\r\n\r\n```sh\r\ncurl https://raw.github.com/ankane/groupdate.sql/master/mysql.sql | mysql -u root db_name\r\n```\r\n\r\n[Time zone support](http://dev.mysql.com/doc/refman/5.6/en/time-zone-support.html) must be installed on the server.\r\n\r\n```sh\r\nmysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql\r\n```\r\n\r\n## Complete list\r\n\r\nAll functions are prefixed with `gd_` to prevent conflicts with MySQL functions.\r\n\r\n- second\r\n- minute\r\n- hour\r\n- day\r\n- week\r\n- month\r\n- year\r\n- hour_of_day\r\n- day_of_week\r\n\r\nA list of time zones can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-39027070-5","note":"Don't delete this file! It's used internally to help with page regeneration."}